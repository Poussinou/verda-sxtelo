/*
 * Verda Åœtelo - An anagram game in Esperanto for the web
 * Copyright (C) 2022  Neil Roberts
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/* This file is automatically generated by create-qr-base.py
 * DO NOT EDIT
 */

static const struct vsx_qr_image
base_image = {
        .bits = {
                UINT32_C(0x1fc0007f),
                UINT32_C(0x10400041),
                UINT32_C(0x1740005d),
                UINT32_C(0x1740005d),
                UINT32_C(0x1740005d),
                UINT32_C(0x10400041),
                UINT32_C(0x1fd5557f),
                UINT32_C(0x00000000),
                UINT32_C(0x00000040),
                UINT32_C(0x00000000),
                UINT32_C(0x00000040),
                UINT32_C(0x00000000),
                UINT32_C(0x00000040),
                UINT32_C(0x00000000),
                UINT32_C(0x00000040),
                UINT32_C(0x00000000),
                UINT32_C(0x00000040),
                UINT32_C(0x00000000),
                UINT32_C(0x00000040),
                UINT32_C(0x00000000),
                UINT32_C(0x01f00040),
                UINT32_C(0x01100100),
                UINT32_C(0x0150007f),
                UINT32_C(0x01100041),
                UINT32_C(0x01f0005d),
                UINT32_C(0x0000005d),
                UINT32_C(0x0000005d),
                UINT32_C(0x00000041),
                UINT32_C(0x0000007f),
        },
};

static const struct vsx_qr_image
data_mask_image = {
        .bits = {
                UINT32_C(0x001ffe00),
                UINT32_C(0x001ffe00),
                UINT32_C(0x001ffe00),
                UINT32_C(0x001ffe00),
                UINT32_C(0x001ffe00),
                UINT32_C(0x001ffe00),
                UINT32_C(0x00000000),
                UINT32_C(0x001ffe00),
                UINT32_C(0x001ffe00),
                UINT32_C(0x1fffffbf),
                UINT32_C(0x1fffffbf),
                UINT32_C(0x1fffffbf),
                UINT32_C(0x1fffffbf),
                UINT32_C(0x1fffffbf),
                UINT32_C(0x1fffffbf),
                UINT32_C(0x1fffffbf),
                UINT32_C(0x1fffffbf),
                UINT32_C(0x1fffffbf),
                UINT32_C(0x1fffffbf),
                UINT32_C(0x1fffffbf),
                UINT32_C(0x1e0fffbf),
                UINT32_C(0x1e0ffe00),
                UINT32_C(0x1e0ffe00),
                UINT32_C(0x1e0ffe00),
                UINT32_C(0x1e0ffe00),
                UINT32_C(0x1ffffe00),
                UINT32_C(0x1ffffe00),
                UINT32_C(0x1ffffe00),
                UINT32_C(0x1ffffe00),
        },
};

static const struct vsx_qr_image
mask_images[] = {
        {
                .bits = {
                        UINT32_C(0x00155400),
                        UINT32_C(0x000aaa00),
                        UINT32_C(0x00155400),
                        UINT32_C(0x000aaa00),
                        UINT32_C(0x00155400),
                        UINT32_C(0x000aaa00),
                        UINT32_C(0x00000000),
                        UINT32_C(0x000aaa00),
                        UINT32_C(0x00155400),
                        UINT32_C(0x0aaaaaaa),
                        UINT32_C(0x15555515),
                        UINT32_C(0x0aaaaaaa),
                        UINT32_C(0x15555515),
                        UINT32_C(0x0aaaaaaa),
                        UINT32_C(0x15555515),
                        UINT32_C(0x0aaaaaaa),
                        UINT32_C(0x15555515),
                        UINT32_C(0x0aaaaaaa),
                        UINT32_C(0x15555515),
                        UINT32_C(0x0aaaaaaa),
                        UINT32_C(0x14055515),
                        UINT32_C(0x0a0aaa00),
                        UINT32_C(0x14055400),
                        UINT32_C(0x0a0aaa00),
                        UINT32_C(0x14055400),
                        UINT32_C(0x0aaaaa00),
                        UINT32_C(0x15555400),
                        UINT32_C(0x0aaaaa00),
                        UINT32_C(0x15555400),
                },
        },
        {
                .bits = {
                        UINT32_C(0x001ffe00),
                        UINT32_C(0x00000000),
                        UINT32_C(0x001ffe00),
                        UINT32_C(0x00000000),
                        UINT32_C(0x001ffe00),
                        UINT32_C(0x00000000),
                        UINT32_C(0x00000000),
                        UINT32_C(0x00000000),
                        UINT32_C(0x001ffe00),
                        UINT32_C(0x00000000),
                        UINT32_C(0x1fffffbf),
                        UINT32_C(0x00000000),
                        UINT32_C(0x1fffffbf),
                        UINT32_C(0x00000000),
                        UINT32_C(0x1fffffbf),
                        UINT32_C(0x00000000),
                        UINT32_C(0x1fffffbf),
                        UINT32_C(0x00000000),
                        UINT32_C(0x1fffffbf),
                        UINT32_C(0x00000000),
                        UINT32_C(0x1e0fffbf),
                        UINT32_C(0x00000000),
                        UINT32_C(0x1e0ffe00),
                        UINT32_C(0x00000000),
                        UINT32_C(0x1e0ffe00),
                        UINT32_C(0x00000000),
                        UINT32_C(0x1ffffe00),
                        UINT32_C(0x00000000),
                        UINT32_C(0x1ffffe00),
                },
        },
        {
                .bits = {
                        UINT32_C(0x00049200),
                        UINT32_C(0x00049200),
                        UINT32_C(0x00049200),
                        UINT32_C(0x00049200),
                        UINT32_C(0x00049200),
                        UINT32_C(0x00049200),
                        UINT32_C(0x00000000),
                        UINT32_C(0x00049200),
                        UINT32_C(0x00049200),
                        UINT32_C(0x09249209),
                        UINT32_C(0x09249209),
                        UINT32_C(0x09249209),
                        UINT32_C(0x09249209),
                        UINT32_C(0x09249209),
                        UINT32_C(0x09249209),
                        UINT32_C(0x09249209),
                        UINT32_C(0x09249209),
                        UINT32_C(0x09249209),
                        UINT32_C(0x09249209),
                        UINT32_C(0x09249209),
                        UINT32_C(0x08049209),
                        UINT32_C(0x08049200),
                        UINT32_C(0x08049200),
                        UINT32_C(0x08049200),
                        UINT32_C(0x08049200),
                        UINT32_C(0x09249200),
                        UINT32_C(0x09249200),
                        UINT32_C(0x09249200),
                        UINT32_C(0x09249200),
                },
        },
        {
                .bits = {
                        UINT32_C(0x00049200),
                        UINT32_C(0x00124800),
                        UINT32_C(0x00092400),
                        UINT32_C(0x00049200),
                        UINT32_C(0x00124800),
                        UINT32_C(0x00092400),
                        UINT32_C(0x00000000),
                        UINT32_C(0x00124800),
                        UINT32_C(0x00092400),
                        UINT32_C(0x09249209),
                        UINT32_C(0x04924924),
                        UINT32_C(0x12492492),
                        UINT32_C(0x09249209),
                        UINT32_C(0x04924924),
                        UINT32_C(0x12492492),
                        UINT32_C(0x09249209),
                        UINT32_C(0x04924924),
                        UINT32_C(0x12492492),
                        UINT32_C(0x09249209),
                        UINT32_C(0x04924924),
                        UINT32_C(0x12092492),
                        UINT32_C(0x08049200),
                        UINT32_C(0x04024800),
                        UINT32_C(0x12092400),
                        UINT32_C(0x08049200),
                        UINT32_C(0x04924800),
                        UINT32_C(0x12492400),
                        UINT32_C(0x09249200),
                        UINT32_C(0x04924800),
                },
        },
        {
                .bits = {
                        UINT32_C(0x001c7000),
                        UINT32_C(0x001c7000),
                        UINT32_C(0x00038e00),
                        UINT32_C(0x00038e00),
                        UINT32_C(0x001c7000),
                        UINT32_C(0x001c7000),
                        UINT32_C(0x00000000),
                        UINT32_C(0x00038e00),
                        UINT32_C(0x001c7000),
                        UINT32_C(0x071c7187),
                        UINT32_C(0x18e38e38),
                        UINT32_C(0x18e38e38),
                        UINT32_C(0x071c7187),
                        UINT32_C(0x071c7187),
                        UINT32_C(0x18e38e38),
                        UINT32_C(0x18e38e38),
                        UINT32_C(0x071c7187),
                        UINT32_C(0x071c7187),
                        UINT32_C(0x18e38e38),
                        UINT32_C(0x18e38e38),
                        UINT32_C(0x060c7187),
                        UINT32_C(0x060c7000),
                        UINT32_C(0x18038e00),
                        UINT32_C(0x18038e00),
                        UINT32_C(0x060c7000),
                        UINT32_C(0x071c7000),
                        UINT32_C(0x18e38e00),
                        UINT32_C(0x18e38e00),
                        UINT32_C(0x071c7000),
                },
        },
        {
                .bits = {
                        UINT32_C(0x001ffe00),
                        UINT32_C(0x00041000),
                        UINT32_C(0x00049200),
                        UINT32_C(0x00155400),
                        UINT32_C(0x00049200),
                        UINT32_C(0x00041000),
                        UINT32_C(0x00000000),
                        UINT32_C(0x00041000),
                        UINT32_C(0x00049200),
                        UINT32_C(0x15555515),
                        UINT32_C(0x09249209),
                        UINT32_C(0x01041001),
                        UINT32_C(0x1fffffbf),
                        UINT32_C(0x01041001),
                        UINT32_C(0x09249209),
                        UINT32_C(0x15555515),
                        UINT32_C(0x09249209),
                        UINT32_C(0x01041001),
                        UINT32_C(0x1fffffbf),
                        UINT32_C(0x01041001),
                        UINT32_C(0x08049209),
                        UINT32_C(0x14055400),
                        UINT32_C(0x08049200),
                        UINT32_C(0x00041000),
                        UINT32_C(0x1e0ffe00),
                        UINT32_C(0x01041000),
                        UINT32_C(0x09249200),
                        UINT32_C(0x15555400),
                        UINT32_C(0x09249200),
                },
        },
        {
                .bits = {
                        UINT32_C(0x001ffe00),
                        UINT32_C(0x001c7000),
                        UINT32_C(0x000db600),
                        UINT32_C(0x00155400),
                        UINT32_C(0x0016da00),
                        UINT32_C(0x00071c00),
                        UINT32_C(0x00000000),
                        UINT32_C(0x001c7000),
                        UINT32_C(0x000db600),
                        UINT32_C(0x15555515),
                        UINT32_C(0x0db6db2d),
                        UINT32_C(0x11c71c31),
                        UINT32_C(0x1fffffbf),
                        UINT32_C(0x071c7187),
                        UINT32_C(0x1b6db69b),
                        UINT32_C(0x15555515),
                        UINT32_C(0x0db6db2d),
                        UINT32_C(0x11c71c31),
                        UINT32_C(0x1fffffbf),
                        UINT32_C(0x071c7187),
                        UINT32_C(0x1a0db69b),
                        UINT32_C(0x14055400),
                        UINT32_C(0x0c06da00),
                        UINT32_C(0x10071c00),
                        UINT32_C(0x1e0ffe00),
                        UINT32_C(0x071c7000),
                        UINT32_C(0x1b6db600),
                        UINT32_C(0x15555400),
                        UINT32_C(0x0db6da00),
                },
        },
        {
                .bits = {
                        UINT32_C(0x00155400),
                        UINT32_C(0x00038e00),
                        UINT32_C(0x00071c00),
                        UINT32_C(0x000aaa00),
                        UINT32_C(0x001c7000),
                        UINT32_C(0x0018e200),
                        UINT32_C(0x00000000),
                        UINT32_C(0x00038e00),
                        UINT32_C(0x00071c00),
                        UINT32_C(0x0aaaaaaa),
                        UINT32_C(0x071c7187),
                        UINT32_C(0x0e38e38e),
                        UINT32_C(0x15555515),
                        UINT32_C(0x18e38e38),
                        UINT32_C(0x11c71c31),
                        UINT32_C(0x0aaaaaaa),
                        UINT32_C(0x071c7187),
                        UINT32_C(0x0e38e38e),
                        UINT32_C(0x15555515),
                        UINT32_C(0x18e38e38),
                        UINT32_C(0x10071c31),
                        UINT32_C(0x0a0aaa00),
                        UINT32_C(0x060c7000),
                        UINT32_C(0x0e08e200),
                        UINT32_C(0x14055400),
                        UINT32_C(0x18e38e00),
                        UINT32_C(0x11c71c00),
                        UINT32_C(0x0aaaaa00),
                        UINT32_C(0x071c7000),
                },
        },
};

